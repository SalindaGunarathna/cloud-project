apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  labels:
    app: frontend
    version: v1
spec:
  replicas: 3  # Frontend needs availability too
  selector:
    matchLabels:
      app: frontend
  # Rolling Update Strategy
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  minReadySeconds: 5        # Frontend starts faster
  revisionHistoryLimit: 5
  template:
    metadata:
      labels:
        app: frontend
        version: v1
    spec:
      containers:
      - name: frontend
        image: salindadocker/project-frontend:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 80
          name: http
        
        # Resource Management (lighter for frontend)
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
        
        # Health Probes for Nginx/Frontend
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 3
          successThreshold: 1
        
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 15
          periodSeconds: 20
          timeoutSeconds: 3
          failureThreshold: 3
        
        # Startup Probe (frontend starts fast)
        startupProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 2
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 10
        
        # Graceful Shutdown
        lifecycle:
          preStop:
            exec:
              command: ["/bin/sh", "-c", "sleep 10"]
---
apiVersion: v1
kind: Service
metadata:
  name: frontend
spec:
  selector:
    app: frontend
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
    name: http
  type: ClusterIP










# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: frontend
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: frontend
#   template:
#     metadata:
#       labels:
#         app: frontend
#     spec:
#       containers:
#         - name: frontend
#           image: salindadocker/project-frontend:latest
#           #imagePullPolicy: IfNotPresent
#           imagePullPolicy: Always
#           ports:
#             - containerPort: 80
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: frontend
# spec:
#   selector:
#     app: frontend
#   ports:
#     - protocol: TCP
#       port: 80
#       targetPort: 80